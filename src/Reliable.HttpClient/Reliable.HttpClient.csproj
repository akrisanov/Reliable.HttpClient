<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!-- TargetFrameworks, LangVersion, Nullable, ImplicitUsings inherited from
    Directory.Build.props -->
    <AssemblyName>Reliable.HttpClient</AssemblyName>
    <PackageId>Reliable.HttpClient</PackageId>
    <Version>1.2.0</Version>
    <PackageReleaseNotes>ðŸŽ‰ v1.2.0 Release - Custom Headers Support &amp; OAuth Integration

      âœ¨ Major New Features:
      â€¢ Comprehensive custom headers support for OAuth, authentication, and API integration
      â€¢ DefaultHeaders property for static headers across all requests
      â€¢ Per-request headers via IHttpClientAdapter method overloads
      â€¢ Fluent header management in HttpClientOptionsBuilder (WithHeader, WithHeaders, WithoutHeader)
      â€¢ Extensive OAuth token patterns and multi-tenant header examples
      â€¢ Header validation and sanitization utilities
      â€¢ Dynamic token refresh patterns for authentication APIs

      ðŸ”§ API Enhancements:
      â€¢ All HTTP methods (GET, POST, PUT, DELETE) now support custom headers
      â€¢ Case-insensitive header handling with proper validation
      â€¢ Helper methods in HttpClientAdapter for code deduplication
      â€¢ Improved DI container usage patterns (removed unnecessary constructor validation)
      â€¢ Enhanced documentation with progressive disclosure structure

      ðŸŽ¯ Key Use Cases:
      â€¢ OAuth APIs with dynamic token management â†’ Custom headers per request
      â€¢ Multi-tenant SaaS applications â†’ Tenant-specific headers
      â€¢ API versioning and content negotiation â†’ Version-aware header management
      â€¢ HMAC/signature authentication â†’ Custom authentication headers
      â€¢ Request tracing and correlation â†’ Dynamic correlation headers

      ðŸš€ Quick Start:
      // Static headers
      .AddResilience(builder => builder.WithHeader("X-API-Key", "key"))
      
      // Dynamic headers per request
      await client.GetAsync&lt;Data&gt;("/endpoint", headers);

      ðŸ“š Full documentation: https://github.com/akrisanov/Reliable.HttpClient

      âš¡ Breaking Changes: None - fully backward compatible</PackageReleaseNotes>
    <Authors>Andrey Krisanov</Authors>
    <Company></Company>
    <Description>Production-ready HttpClient resilience ecosystem with comprehensive custom headers support, OAuth integration, universal response handlers, retry policies, and circuit breakers. Zero configuration required.</Description>
    <PackageTags>httpclient;resilience;polly;retry;circuit-breaker;custom-headers;oauth;authentication;universal-handlers;substitution;rest-api;dotnet</PackageTags>
    <RepositoryUrl>https://github.com/akrisanov/Reliable.HttpClient</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <DebugType>portable</DebugType>
    <!-- Suppress warnings about Microsoft.Extensions.* 9.x not officially supporting .NET 6.0 -->
    <!-- These packages work fine with .NET 6.0 in practice -->
    <SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Http.Polly" Version="9.0.8" />
    <PackageReference Include="Polly" Version="8.6.3" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\README.md" Pack="true" PackagePath="/" />
  </ItemGroup>
</Project>
