<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <!-- TargetFrameworks, LangVersion, ImplicitUsings, Nullable inherited from
    Directory.Build.props -->
    <AssemblyName>Reliable.HttpClient.Caching</AssemblyName>
    <PackageId>Reliable.HttpClient.Caching</PackageId>
    <Version>1.1.0</Version>
    <PackageReleaseNotes>üöÄ v1.1.0 Release - Generic Caching Architecture!

      ‚ú® New Major Features:

      ‚Ä¢ Generic Caching Namespace (Reliable.HttpClient.Caching.Generic)
      ‚Ä¢ Type-safe CachedHttpClient&lt;T&gt; for specific response types
      ‚Ä¢ Compile-time type safety with improved performance
      ‚Ä¢ Separate namespace organization: Generic vs Universal caching approaches
      ‚Ä¢ Enhanced extension methods with "Generic" prefixes for clear API distinction

      üèóÔ∏è Architecture Improvements:

      ‚Ä¢ Clear separation between Generic (type-safe) and Universal (multi-type) caching
      ‚Ä¢ Namespace restructuring for better developer experience
      ‚Ä¢ Comprehensive documentation and choosing guides

      üîÑ Backward Compatibility:

      ‚Ä¢ All existing Universal caching APIs remain unchanged
      ‚Ä¢ Existing code continues to work without modifications
      ‚Ä¢ Migration path available for those wanting type-safe benefits

      üìñ Documentation:

      ‚Ä¢ Complete architecture guide and decision framework
      ‚Ä¢ Real-world examples and common scenarios
      ‚Ä¢ Migration guidance for different use cases
    </PackageReleaseNotes>
    <Authors>Andrey Krisanov</Authors>
    <Company></Company>
    <Description>Intelligent HTTP response caching for Reliable.HttpClient with two distinct
      approaches: Generic type-safe caching (CachedHttpClient&lt;T&gt;) for specific response types
      and Universal caching (HttpClientWithCache) for multi-type scenarios. Features preset-based
      configuration, automatic memory management, and zero-setup convenience methods.</Description>
    <PackageTags>
      httpclient;caching;resilience;memory-cache;presets;zero-config;dotnet;generic;type-safe;universal</PackageTags>
    <RepositoryUrl>https://github.com/akrisanov/Reliable.HttpClient</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <DebugType>portable</DebugType>
    <SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Caching.Abstractions" Version="9.0.8" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="9.0.8" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions"
      Version="9.0.8" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="9.0.8" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="9.0.8" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="9.0.8" />
    <!-- For release: uncomment PackageReference and comment out ProjectReference -->
    <PackageReference Include="Reliable.HttpClient" Version="1.1.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- For development and testing: use ProjectReference -->
    <!-- <ProjectReference Include="../Reliable.HttpClient/Reliable.HttpClient.csproj" /> -->
  </ItemGroup>

  <ItemGroup>
    <None Include="README.md" Pack="true" PackagePath="/" />
  </ItemGroup>
</Project>
